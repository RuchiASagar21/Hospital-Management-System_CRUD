/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.CityDirectory;
import model.CommunityDirectory;
import model.DoctorDirectory;
import model.EncounterHistory;
import model.HospitalDirDirectory;

import model.HospitalDirectory;
import model.HouseDirectory;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;
import model.VitalSignsHistory;

/**
 *
 * @author Ruchi Anand Sagar
 */
public class CityJFrame extends javax.swing.JFrame {

    /**
     * Creates new form CityJFrame
     */
   PatientDirectory patientHistory;
    PersonDirectory personHistory;
    HouseDirectory houseHistory;
    CityDirectory cityHistory;
    HospitalDirectory hospitalHistory;
   CommunityDirectory communityHistory;
    HospitalDirDirectory hospitalDirHistory;
    DoctorDirectory doctorHistory;
    EncounterHistory encounterHistory;
     VitalSignsHistory vitalSignsHistory;
    
    public CityJFrame(PersonDirectory personHistory,PatientDirectory patientHistory,HouseDirectory houseHistory,CommunityDirectory communityHistory,  CityDirectory cityHistory,HospitalDirectory hospitalHistory,HospitalDirDirectory hospitalDirHistory,DoctorDirectory doctorHistory,EncounterHistory encounterHistory, VitalSignsHistory vitalSignsHistory) {
        initComponents();
        this.personHistory=personHistory;
        this.patientHistory=patientHistory;
        this.houseHistory=houseHistory;
        this.communityHistory=communityHistory;
        this.cityHistory=cityHistory;
        this.hospitalHistory=hospitalHistory;
        this.hospitalDirHistory=hospitalDirHistory;
        this.doctorHistory=doctorHistory;
        this.encounterHistory=encounterHistory;
        this.vitalSignsHistory=vitalSignsHistory;
        populateTableCity();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        citypaneldetailstbl = new javax.swing.JTable();
        citynamelbl = new javax.swing.JLabel();
        zipcodelbl = new javax.swing.JLabel();
        updatebtnc = new javax.swing.JButton();
        citynametxt = new javax.swing.JTextField();
        zipcodetxt = new javax.swing.JTextField();
        deletbtn = new javax.swing.JButton();
        backbtn = new javax.swing.JButton();
        createbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        citypaneldetailstbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "City", "Zip Code"
            }
        ));
        citypaneldetailstbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                citypaneldetailstblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(citypaneldetailstbl);

        citynamelbl.setText("City Name");

        zipcodelbl.setText("Zip Code");

        updatebtnc.setText("Update");
        updatebtnc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtncActionPerformed(evt);
            }
        });

        deletbtn.setText("Delete");
        deletbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletbtnActionPerformed(evt);
            }
        });

        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        createbtn.setText("Create");
        createbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(citynamelbl)
                            .addComponent(zipcodelbl))
                        .addGap(56, 56, 56)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(citynametxt)
                            .addComponent(zipcodetxt, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updatebtnc)
                            .addComponent(deletbtn)
                            .addComponent(createbtn)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(backbtn)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(citynamelbl)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(createbtn)
                                .addGap(18, 18, 18)
                                .addComponent(updatebtnc)
                                .addGap(18, 18, 18)
                                .addComponent(deletbtn)))
                        .addGap(75, 75, 75)
                        .addComponent(citynametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zipcodelbl)
                    .addComponent(zipcodetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(backbtn)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 3, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        // TODO add your handling code here:
        dispose();
        SystemJFrame systemjframe=new SystemJFrame(personHistory, patientHistory,houseHistory,communityHistory,cityHistory,hospitalHistory,hospitalDirHistory,doctorHistory,encounterHistory,vitalSignsHistory);
            systemjframe.setVisible(true);
        
    }//GEN-LAST:event_backbtnActionPerformed

    private void createbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createbtnActionPerformed
        // TODO add your handling code here:
        String city= citynametxt.getText();
        String zipcode= zipcodetxt.getText();
        City c =cityHistory.addNewCity();
        c.setCityname(city);
        c.setZipcodec(zipcode);
        
        
        JOptionPane.showMessageDialog(this, "City Details Saved Successfully!!");
    }//GEN-LAST:event_createbtnActionPerformed

    private void citypaneldetailstblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_citypaneldetailstblMouseClicked
        // TODO add your handling code here:
        
         int selectedRowIndex=citypaneldetailstbl.getSelectedRow();
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
             return;}
             
          DefaultTableModel model=(DefaultTableModel) citypaneldetailstbl.getModel();
          City selectedCity=(City ) model.getValueAt(selectedRowIndex, 0);
          
          citynametxt.setText(selectedCity.getCityname());
          zipcodetxt.setText(String.valueOf(selectedCity.getZipcodec()));
    }//GEN-LAST:event_citypaneldetailstblMouseClicked

    private void updatebtncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtncActionPerformed
        // TODO add your handling code here:
        int i=citypaneldetailstbl.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel) citypaneldetailstbl.getModel();
        
        City selectedCity=(City) cityHistory.getCityAt(i);
     
        selectedCity.setCityname(citynametxt.getText());
        selectedCity.setZipcodec(String.valueOf(zipcodetxt.getText()));
        
         if(i<0)
        {
            JOptionPane.showMessageDialog(null, "Error");
        }
        
          
            model.setValueAt(citynametxt.getText(), i, 0);
            model.setValueAt(zipcodetxt.getText(), i, 1);
            
            JOptionPane.showMessageDialog(this, "Details Updated Successfully!!");
    }//GEN-LAST:event_updatebtncActionPerformed

    private void deletbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletbtnActionPerformed
        // TODO add your handling code here:
        
        int i=citypaneldetailstbl.getSelectedRow();
        if (i<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
             return;}
             
          DefaultTableModel model=(DefaultTableModel) citypaneldetailstbl.getModel();
          City selectedCity=(City) cityHistory.getCityAt(i);
          int response=JOptionPane.showConfirmDialog(this, "Are you sure you want to delete?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
          if(response==JOptionPane.YES_OPTION){
             
          cityHistory.deleteCity(selectedCity);
          JOptionPane.showMessageDialog(this, "City Records Deleted Successfully!!");
          }
          else {
              JOptionPane.showMessageDialog(this, "OK!!");
          }
          populateTableCity();
         citynametxt.setText("");
          zipcodetxt.setText("");
        
    }//GEN-LAST:event_deletbtnActionPerformed

    /**
     * @param args the command line arguments
     */
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backbtn;
    private javax.swing.JLabel citynamelbl;
    private javax.swing.JTextField citynametxt;
    private javax.swing.JTable citypaneldetailstbl;
    private javax.swing.JButton createbtn;
    private javax.swing.JButton deletbtn;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updatebtnc;
    private javax.swing.JLabel zipcodelbl;
    private javax.swing.JTextField zipcodetxt;
    // End of variables declaration//GEN-END:variables

private void populateTableCity() {
        DefaultTableModel model=(DefaultTableModel) citypaneldetailstbl.getModel();
        model.setRowCount(0);
        
        for (City c : cityHistory.getCityHistory())
        {
            Object[] col=new Object[2];
            col[0]= c;
            col[1]= c.getZipcodec();
            
             
            
            model.addRow(col);
            
        }


}




}
